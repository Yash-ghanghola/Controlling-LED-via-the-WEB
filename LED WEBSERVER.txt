#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWebServer.h>

// WiFi credentials
const char *ssid = "Nokia";      // Your WiFi SSID
const char *password = "yash12345";    // Your WiFi Password

const int output = 5;  // GPIO5 (D1) for PWM control
String sliderValue = "512";  // Default 50% duty cycle

const char* PARAM_INPUT = "value";

// Create AsyncWebServer object on port 80
AsyncWebServer server(80);

const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE HTML><html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>ESP8266 Web PWM Control Server</title>
  <style>
    html {font-family: Arial; text-align: center; margin: 0px auto;}
    h2 {font-size: 2.3rem;}
    p {font-size: 1.9rem;}
    .slider {width: 350px; height: 15px; background: grey; outline: none;}
    .slider::-webkit-slider-thumb {width: 25px; height: 25px; background: magenta; cursor: pointer;}
  </style>
</head>
<body>
  <h2>ESP8266 Web PWM Control</h2>
  <p><span id="textSliderValue">%SLIDERVALUE%</span></p>
  <p><input type="range" onchange="updateSliderPWM()" id="pwmSlider" min="0" max="1023" value="%SLIDERVALUE%" class="slider"></p>
<script>
function updateSliderPWM() {
  var sliderValue = document.getElementById("pwmSlider").value;
  document.getElementById("textSliderValue").innerHTML = sliderValue;
  var xhr = new XMLHttpRequest();
  xhr.open("GET", "/slider?value="+sliderValue, true);
  xhr.send();
}
</script>
</body>
</html>
)rawliteral";

// Replaces placeholders in HTML
String processor(const String& var) {
  if (var == "SLIDERVALUE") {
    return sliderValue;
  }
  return String();
}

void setup() {
  Serial.begin(115200);
  pinMode(output, OUTPUT);
  analogWrite(output, sliderValue.toInt());

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println(WiFi.localIP());

  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
    request->send_P(200, "text/html", index_html, processor);
  });

  server.on("/slider", HTTP_GET, [](AsyncWebServerRequest *request) {
    if (request->hasParam(PARAM_INPUT)) {
      sliderValue = request->getParam(PARAM_INPUT)->value();
      analogWrite(output, sliderValue.toInt());
    }
    Serial.println("PWM Value: " + sliderValue);
    request->send(200, "text/plain", "OK");
  });

  server.begin();
}

void loop() {
  
}